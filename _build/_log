### Starting build.
# Target: gui.mli.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(oUnit), package(yojson), extension:mli, file:gui.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package camlimages -package camlimages.png -package camlimages.jpeg -package graphics -modules gui.mli > gui.mli.depends
# Target: controller.mli.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(oUnit), package(yojson), extension:mli, file:controller.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package camlimages -package camlimages.png -package camlimages.jpeg -package graphics -modules controller.mli > controller.mli.depends
# Target: pokemon.mli.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(oUnit), package(yojson), extension:mli, file:pokemon.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package camlimages -package camlimages.png -package camlimages.jpeg -package graphics -modules pokemon.mli > pokemon.mli.depends
# Target: controller.cmi, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(oUnit), package(yojson), byte, compile, extension:mli, file:controller.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package camlimages -package camlimages.png -package camlimages.jpeg -package graphics -o controller.cmi controller.mli
# Target: shared_types.mli.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(oUnit), package(yojson), extension:mli, file:shared_types.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package camlimages -package camlimages.png -package camlimages.jpeg -package graphics -modules shared_types.mli > shared_types.mli.depends
# Target: pokemon.cmi, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(oUnit), package(yojson), byte, compile, extension:mli, file:pokemon.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package camlimages -package camlimages.png -package camlimages.jpeg -package graphics -o pokemon.cmi pokemon.mli
# Target: shared_types.cmi, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(oUnit), package(yojson), byte, compile, extension:mli, file:shared_types.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package camlimages -package camlimages.png -package camlimages.jpeg -package graphics -o shared_types.cmi shared_types.mli
# Target: gui.cmi, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(oUnit), package(yojson), byte, compile, extension:mli, file:gui.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package camlimages -package camlimages.png -package camlimages.jpeg -package graphics -o gui.cmi gui.mli
# Target: gui.ml.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(oUnit), package(yojson), extension:ml, file:gui.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package camlimages -package camlimages.png -package camlimages.jpeg -package graphics -modules gui.ml > gui.ml.depends
# Target: gui.cmo, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(oUnit), package(yojson), byte, compile, extension:cmo, extension:ml, file:gui.cmo, file:gui.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package camlimages -package camlimages.png -package camlimages.jpeg -package graphics -o gui.cmo gui.ml
+ ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package camlimages -package camlimages.png -package camlimages.jpeg -package graphics -o gui.cmo gui.ml
File "gui.ml", line 1:
Error: The implementation gui.ml does not match the interface gui.cmi:
       The value `draw_start' is required but not provided
       File "gui.mli", line 43, characters 0-29: Expected declaration
       The value `check' is required but not provided
       File "gui.mli", line 33, characters 0-74: Expected declaration
Command exited with code 2.
# Compilation unsuccessful.
