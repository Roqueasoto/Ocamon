### Starting build.
# Target: ai.mli.depends, tags: { package(oUnit), package(yojson), extension:mli, file:ai.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -modules ai.mli > ai.mli.depends # cached
# Target: controller.mli.depends, tags: { package(oUnit), package(yojson), extension:mli, file:controller.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -modules controller.mli > controller.mli.depends # cached
# Target: controller.cmi, tags: { package(oUnit), package(yojson), byte, compile, extension:mli, file:controller.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -o controller.cmi controller.mli # cached
# Target: model.mli.depends, tags: { package(oUnit), package(yojson), extension:mli, file:model.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -modules model.mli > model.mli.depends # cached
# Target: types.mli.depends, tags: { package(oUnit), package(yojson), extension:mli, file:types.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -modules types.mli > types.mli.depends # cached
# Target: pokemon.mli.depends, tags: { package(oUnit), package(yojson), extension:mli, file:pokemon.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -modules pokemon.mli > pokemon.mli.depends # cached
# Target: pokemon.cmi, tags: { package(oUnit), package(yojson), byte, compile, extension:mli, file:pokemon.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -o pokemon.cmi pokemon.mli # cached
# Target: types.cmi, tags: { package(oUnit), package(yojson), byte, compile, extension:mli, file:types.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -o types.cmi types.mli # cached
# Target: model.cmi, tags: { package(oUnit), package(yojson), byte, compile, extension:mli, file:model.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -o model.cmi model.mli # cached
# Target: ai.cmi, tags: { package(oUnit), package(yojson), byte, compile, extension:mli, file:ai.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -o ai.cmi ai.mli # cached
# Target: ai.ml.depends, tags: { package(oUnit), package(yojson), extension:ml, file:ai.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -modules ai.ml > ai.ml.depends # cached
# Target: ai.cmo, tags: { package(oUnit), package(yojson), byte, compile, extension:cmo, extension:ml, file:ai.cmo, file:ai.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -o ai.cmo ai.ml
+ ocamlfind ocamlc -c -package oUnit -package yojson -o ai.cmo ai.ml
File "ai.ml", line 24, characters 26-55:
Error: This expression has type Pokemon.ptype list list
       but an expression was expected of type Pokemon.ptype list
       Type Pokemon.ptype list is not compatible with type Pokemon.ptype 
Command exited with code 2.
# Compilation unsuccessful.
