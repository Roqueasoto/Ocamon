### Starting build.
# Target: main.ml.depends, tags: { package(ANSITerminal), package(Camlimages), package(Camlimages.jpeg), package(Camlimages.png), package(oUnit), package(yojson), extension:ml, file:main.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package Camlimages -package Camlimages.png -package Camlimages.jpeg -modules main.ml > main.ml.depends # cached
# Target: ai.mli.depends, tags: { package(ANSITerminal), package(Camlimages), package(Camlimages.jpeg), package(Camlimages.png), package(oUnit), package(yojson), extension:mli, file:ai.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package Camlimages -package Camlimages.png -package Camlimages.jpeg -modules ai.mli > ai.mli.depends # cached
# Target: controller.mli.depends, tags: { package(ANSITerminal), package(Camlimages), package(Camlimages.jpeg), package(Camlimages.png), package(oUnit), package(yojson), extension:mli, file:controller.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package Camlimages -package Camlimages.png -package Camlimages.jpeg -modules controller.mli > controller.mli.depends # cached
# Target: controller.cmi, tags: { package(ANSITerminal), package(Camlimages), package(Camlimages.jpeg), package(Camlimages.png), package(oUnit), package(yojson), byte, compile, extension:mli, file:controller.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package Camlimages -package Camlimages.png -package Camlimages.jpeg -o controller.cmi controller.mli # cached
# Target: model.mli.depends, tags: { package(ANSITerminal), package(Camlimages), package(Camlimages.jpeg), package(Camlimages.png), package(oUnit), package(yojson), extension:mli, file:model.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package Camlimages -package Camlimages.png -package Camlimages.jpeg -modules model.mli > model.mli.depends # cached
# Target: types.mli.depends, tags: { package(ANSITerminal), package(Camlimages), package(Camlimages.jpeg), package(Camlimages.png), package(oUnit), package(yojson), extension:mli, file:types.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package Camlimages -package Camlimages.png -package Camlimages.jpeg -modules types.mli > types.mli.depends # cached
# Target: pokemon.mli.depends, tags: { package(ANSITerminal), package(Camlimages), package(Camlimages.jpeg), package(Camlimages.png), package(oUnit), package(yojson), extension:mli, file:pokemon.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package Camlimages -package Camlimages.png -package Camlimages.jpeg -modules pokemon.mli > pokemon.mli.depends # cached
# Target: pokemon.cmi, tags: { package(ANSITerminal), package(Camlimages), package(Camlimages.jpeg), package(Camlimages.png), package(oUnit), package(yojson), byte, compile, extension:mli, file:pokemon.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package Camlimages -package Camlimages.png -package Camlimages.jpeg -o pokemon.cmi pokemon.mli # cached
# Target: types.cmi, tags: { package(ANSITerminal), package(Camlimages), package(Camlimages.jpeg), package(Camlimages.png), package(oUnit), package(yojson), byte, compile, extension:mli, file:types.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package Camlimages -package Camlimages.png -package Camlimages.jpeg -o types.cmi types.mli # cached
# Target: model.cmi, tags: { package(ANSITerminal), package(Camlimages), package(Camlimages.jpeg), package(Camlimages.png), package(oUnit), package(yojson), byte, compile, extension:mli, file:model.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package Camlimages -package Camlimages.png -package Camlimages.jpeg -o model.cmi model.mli # cached
# Target: ai.cmi, tags: { package(ANSITerminal), package(Camlimages), package(Camlimages.jpeg), package(Camlimages.png), package(oUnit), package(yojson), byte, compile, extension:mli, file:ai.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package Camlimages -package Camlimages.png -package Camlimages.jpeg -o ai.cmi ai.mli # cached
# Target: guitext.mli.depends, tags: { package(ANSITerminal), package(Camlimages), package(Camlimages.jpeg), package(Camlimages.png), package(oUnit), package(yojson), extension:mli, file:guitext.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package Camlimages -package Camlimages.png -package Camlimages.jpeg -modules guitext.mli > guitext.mli.depends # cached
# Target: guitext.cmi, tags: { package(ANSITerminal), package(Camlimages), package(Camlimages.jpeg), package(Camlimages.png), package(oUnit), package(yojson), byte, compile, extension:mli, file:guitext.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package Camlimages -package Camlimages.png -package Camlimages.jpeg -o guitext.cmi guitext.mli # cached
# Target: main.cmo, tags: { package(ANSITerminal), package(Camlimages), package(Camlimages.jpeg), package(Camlimages.png), package(oUnit), package(yojson), byte, compile, extension:cmo, extension:ml, file:main.cmo, file:main.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package Camlimages -package Camlimages.png -package Camlimages.jpeg -o main.cmo main.ml # cached
# Target: ai.ml.depends, tags: { package(ANSITerminal), package(Camlimages), package(Camlimages.jpeg), package(Camlimages.png), package(oUnit), package(yojson), extension:ml, file:ai.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package Camlimages -package Camlimages.png -package Camlimages.jpeg -modules ai.ml > ai.ml.depends # cached
# Target: ai.cmo, tags: { package(ANSITerminal), package(Camlimages), package(Camlimages.jpeg), package(Camlimages.png), package(oUnit), package(yojson), byte, compile, extension:cmo, extension:ml, file:ai.cmo, file:ai.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package Camlimages -package Camlimages.png -package Camlimages.jpeg -o ai.cmo ai.ml # cached
# Target: controller.ml.depends, tags: { package(ANSITerminal), package(Camlimages), package(Camlimages.jpeg), package(Camlimages.png), package(oUnit), package(yojson), extension:ml, file:controller.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package Camlimages -package Camlimages.png -package Camlimages.jpeg -modules controller.ml > controller.ml.depends # cached
# Target: controller.cmo, tags: { package(ANSITerminal), package(Camlimages), package(Camlimages.jpeg), package(Camlimages.png), package(oUnit), package(yojson), byte, compile, extension:cmo, extension:ml, file:controller.cmo, file:controller.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package Camlimages -package Camlimages.png -package Camlimages.jpeg -o controller.cmo controller.ml # cached
# Target: guitext.ml.depends, tags: { package(ANSITerminal), package(Camlimages), package(Camlimages.jpeg), package(Camlimages.png), package(oUnit), package(yojson), extension:ml, file:guitext.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package Camlimages -package Camlimages.png -package Camlimages.jpeg -modules guitext.ml > guitext.ml.depends # cached
# Target: guitext.cmo, tags: { package(ANSITerminal), package(Camlimages), package(Camlimages.jpeg), package(Camlimages.png), package(oUnit), package(yojson), byte, compile, extension:cmo, extension:ml, file:guitext.cmo, file:guitext.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package Camlimages -package Camlimages.png -package Camlimages.jpeg -o guitext.cmo guitext.ml # cached
# Target: model.ml.depends, tags: { package(ANSITerminal), package(Camlimages), package(Camlimages.jpeg), package(Camlimages.png), package(oUnit), package(yojson), extension:ml, file:model.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package Camlimages -package Camlimages.png -package Camlimages.jpeg -modules model.ml > model.ml.depends # cached
# Target: model.cmo, tags: { package(ANSITerminal), package(Camlimages), package(Camlimages.jpeg), package(Camlimages.png), package(oUnit), package(yojson), byte, compile, extension:cmo, extension:ml, file:model.cmo, file:model.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package Camlimages -package Camlimages.png -package Camlimages.jpeg -o model.cmo model.ml # cached
# Target: types.ml.depends, tags: { package(ANSITerminal), package(Camlimages), package(Camlimages.jpeg), package(Camlimages.png), package(oUnit), package(yojson), extension:ml, file:types.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package Camlimages -package Camlimages.png -package Camlimages.jpeg -modules types.ml > types.ml.depends # cached
# Target: types.cmo, tags: { package(ANSITerminal), package(Camlimages), package(Camlimages.jpeg), package(Camlimages.png), package(oUnit), package(yojson), byte, compile, extension:cmo, extension:ml, file:types.cmo, file:types.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package Camlimages -package Camlimages.png -package Camlimages.jpeg -o types.cmo types.ml # cached
# Target: pokemon.ml.depends, tags: { package(ANSITerminal), package(Camlimages), package(Camlimages.jpeg), package(Camlimages.png), package(oUnit), package(yojson), extension:ml, file:pokemon.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package Camlimages -package Camlimages.png -package Camlimages.jpeg -modules pokemon.ml > pokemon.ml.depends # cached
# Target: pokemon.cmo, tags: { package(ANSITerminal), package(Camlimages), package(Camlimages.jpeg), package(Camlimages.png), package(oUnit), package(yojson), byte, compile, extension:cmo, extension:ml, file:pokemon.cmo, file:pokemon.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package Camlimages -package Camlimages.png -package Camlimages.jpeg -o pokemon.cmo pokemon.ml # cached
# Target: main.byte, tags: { package(ANSITerminal), package(Camlimages), package(Camlimages.jpeg), package(Camlimages.png), package(oUnit), package(yojson), byte, dont_link_with, extension:byte, file:main.byte, link, ocaml, program, quiet, traverse }
ocamlfind ocamlc -linkpkg -package oUnit -package yojson -package ANSITerminal -package Camlimages -package Camlimages.png -package Camlimages.jpeg controller.cmo pokemon.cmo types.cmo model.cmo ai.cmo guitext.cmo main.cmo -o main.byte # cached
# Compilation successful.
