### Starting build.
# Target: guitext.mli.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(oUnit), package(yojson), extension:mli, file:guitext.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package camlimages -package camlimages.png -package camlimages.jpeg -package graphics -modules guitext.mli > guitext.mli.depends # cached
# Target: controller.mli.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(oUnit), package(yojson), extension:mli, file:controller.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package camlimages -package camlimages.png -package camlimages.jpeg -package graphics -modules controller.mli > controller.mli.depends # cached
# Target: controller.cmi, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(oUnit), package(yojson), byte, compile, extension:mli, file:controller.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package camlimages -package camlimages.png -package camlimages.jpeg -package graphics -o controller.cmi controller.mli # cached
# Target: shared_types.mli.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(oUnit), package(yojson), extension:mli, file:shared_types.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package camlimages -package camlimages.png -package camlimages.jpeg -package graphics -modules shared_types.mli > shared_types.mli.depends # cached
# Target: pokemon.mli.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(oUnit), package(yojson), extension:mli, file:pokemon.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package camlimages -package camlimages.png -package camlimages.jpeg -package graphics -modules pokemon.mli > pokemon.mli.depends # cached
# Target: pokemon.cmi, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(oUnit), package(yojson), byte, compile, extension:mli, file:pokemon.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package camlimages -package camlimages.png -package camlimages.jpeg -package graphics -o pokemon.cmi pokemon.mli # cached
# Target: shared_types.cmi, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(oUnit), package(yojson), byte, compile, extension:mli, file:shared_types.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package camlimages -package camlimages.png -package camlimages.jpeg -package graphics -o shared_types.cmi shared_types.mli # cached
# Target: guitext.cmi, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(oUnit), package(yojson), byte, compile, extension:mli, file:guitext.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package camlimages -package camlimages.png -package camlimages.jpeg -package graphics -o guitext.cmi guitext.mli # cached
# Target: guitext.ml.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(oUnit), package(yojson), extension:ml, file:guitext.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package camlimages -package camlimages.png -package camlimages.jpeg -package graphics -modules guitext.ml > guitext.ml.depends # cached
# Target: guitext.cmo, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(oUnit), package(yojson), byte, compile, extension:cmo, extension:ml, file:guitext.cmo, file:guitext.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package camlimages -package camlimages.png -package camlimages.jpeg -package graphics -o guitext.cmo guitext.ml # cached
# Target: ai.mli.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(oUnit), package(yojson), extension:mli, file:ai.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package camlimages -package camlimages.png -package camlimages.jpeg -package graphics -modules ai.mli > ai.mli.depends # cached
# Target: model.mli.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(oUnit), package(yojson), extension:mli, file:model.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package camlimages -package camlimages.png -package camlimages.jpeg -package graphics -modules model.mli > model.mli.depends # cached
# Target: model.cmi, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(oUnit), package(yojson), byte, compile, extension:mli, file:model.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package camlimages -package camlimages.png -package camlimages.jpeg -package graphics -o model.cmi model.mli # cached
# Target: ai.cmi, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(oUnit), package(yojson), byte, compile, extension:mli, file:ai.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package camlimages -package camlimages.png -package camlimages.jpeg -package graphics -o ai.cmi ai.mli # cached
# Target: ai.ml.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(oUnit), package(yojson), extension:ml, file:ai.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package camlimages -package camlimages.png -package camlimages.jpeg -package graphics -modules ai.ml > ai.ml.depends
# Target: ai.cmo, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(oUnit), package(yojson), byte, compile, extension:cmo, extension:ml, file:ai.cmo, file:ai.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package camlimages -package camlimages.png -package camlimages.jpeg -package graphics -o ai.cmo ai.ml
# Target: controller.ml.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(oUnit), package(yojson), extension:ml, file:controller.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package camlimages -package camlimages.png -package camlimages.jpeg -package graphics -modules controller.ml > controller.ml.depends
# Target: controller.cmo, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(oUnit), package(yojson), byte, compile, extension:cmo, extension:ml, file:controller.cmo, file:controller.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package camlimages -package camlimages.png -package camlimages.jpeg -package graphics -o controller.cmo controller.ml
# Target: model.ml.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(oUnit), package(yojson), extension:ml, file:model.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package camlimages -package camlimages.png -package camlimages.jpeg -package graphics -modules model.ml > model.ml.depends
# Target: model.cmo, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(oUnit), package(yojson), byte, compile, extension:cmo, extension:ml, file:model.cmo, file:model.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package camlimages -package camlimages.png -package camlimages.jpeg -package graphics -o model.cmo model.ml
+ ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package camlimages -package camlimages.png -package camlimages.jpeg -package graphics -o model.cmo model.ml
File "model.ml", line 356, characters 6-38:
Error: The constructor Special expects 4 argument(s),
       but is applied here to 3 argument(s)
Command exited with code 2.
# Compilation unsuccessful.
