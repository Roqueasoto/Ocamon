### Starting build.
# Target: test.ml.depends, tags: { package(ANSITerminal), package(oUnit), package(yojson), extension:ml, file:test.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -modules test.ml > test.ml.depends # cached
# Target: ai_test.ml.depends, tags: { package(ANSITerminal), package(oUnit), package(yojson), extension:ml, file:ai_test.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -modules ai_test.ml > ai_test.ml.depends
# Target: ai.mli.depends, tags: { package(ANSITerminal), package(oUnit), package(yojson), extension:mli, file:ai.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -modules ai.mli > ai.mli.depends # cached
# Target: controller.mli.depends, tags: { package(ANSITerminal), package(oUnit), package(yojson), extension:mli, file:controller.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -modules controller.mli > controller.mli.depends # cached
# Target: controller.cmi, tags: { package(ANSITerminal), package(oUnit), package(yojson), byte, compile, extension:mli, file:controller.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -o controller.cmi controller.mli # cached
# Target: model.mli.depends, tags: { package(ANSITerminal), package(oUnit), package(yojson), extension:mli, file:model.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -modules model.mli > model.mli.depends # cached
# Target: types.mli.depends, tags: { package(ANSITerminal), package(oUnit), package(yojson), extension:mli, file:types.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -modules types.mli > types.mli.depends # cached
# Target: pokemon.mli.depends, tags: { package(ANSITerminal), package(oUnit), package(yojson), extension:mli, file:pokemon.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -modules pokemon.mli > pokemon.mli.depends # cached
# Target: pokemon.cmi, tags: { package(ANSITerminal), package(oUnit), package(yojson), byte, compile, extension:mli, file:pokemon.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -o pokemon.cmi pokemon.mli # cached
# Target: types.cmi, tags: { package(ANSITerminal), package(oUnit), package(yojson), byte, compile, extension:mli, file:types.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -o types.cmi types.mli # cached
# Target: model.cmi, tags: { package(ANSITerminal), package(oUnit), package(yojson), byte, compile, extension:mli, file:model.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -o model.cmi model.mli # cached
# Target: ai.cmi, tags: { package(ANSITerminal), package(oUnit), package(yojson), byte, compile, extension:mli, file:ai.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -o ai.cmi ai.mli # cached
# Target: test_andrea.mli.depends, tags: { package(ANSITerminal), package(oUnit), package(yojson), extension:mli, file:test_andrea.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -modules test_andrea.mli > test_andrea.mli.depends # cached
# Target: test_andrea.cmi, tags: { package(ANSITerminal), package(oUnit), package(yojson), byte, compile, extension:mli, file:test_andrea.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -o test_andrea.cmi test_andrea.mli # cached
# Target: test_cynthia.mli.depends, tags: { package(ANSITerminal), package(oUnit), package(yojson), extension:mli, file:test_cynthia.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -modules test_cynthia.mli > test_cynthia.mli.depends # cached
# Target: test_cynthia.cmi, tags: { package(ANSITerminal), package(oUnit), package(yojson), byte, compile, extension:mli, file:test_cynthia.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -o test_cynthia.cmi test_cynthia.mli # cached
# Target: test_timothy.mli.depends, tags: { package(ANSITerminal), package(oUnit), package(yojson), extension:mli, file:test_timothy.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -modules test_timothy.mli > test_timothy.mli.depends # cached
# Target: test_timothy.cmi, tags: { package(ANSITerminal), package(oUnit), package(yojson), byte, compile, extension:mli, file:test_timothy.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -o test_timothy.cmi test_timothy.mli # cached
# Target: ai_test.cmo, tags: { package(ANSITerminal), package(oUnit), package(yojson), byte, compile, extension:cmo, extension:ml, file:ai_test.cmo, file:ai_test.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -o ai_test.cmo ai_test.ml
+ ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -o ai_test.cmo ai_test.ml
File "ai_test.ml", line 43, characters 19-30:
Error: This function has type Pokemon.t -> Controller.effect -> Pokemon.t
       It is applied to too many arguments; maybe you forgot a `;'.
Command exited with code 2.
# Compilation unsuccessful.
